const fs = require ("fs");
// const { console } = require("inspector");
const promptSync = require("prompt-sync")();
const path = require ("path");
const { stringify } = require("querystring");

// //nome do cliente e endere√ßo

let nomeCliente = 0;
let enderecoCliente = 0;
let distanciaEntrega = 0;
let valorKm = 0;
let valorTotal = 0;
let tipoEntrega = 0;

let totalEntregas = 0;
let totalMediaEntregas= 0;

let continuar = "S"
let i = 1

let dados = []

while (continuar == "S") { // A condi√ß√£o se torna verdadeira at√© que a resposta dada no final de toda essa repeti√ß√£o seja "S".

    //Todos os "whiles" aqui dentro adicionam as informa√ß√µes que o usu√°rio inserir, em suas seguintes vari√°veis. 
    // Nome do Cliente
    while (!isNaN(nomeCliente)) {
        nomeCliente = promptSync(`üòä Digite seu nome: `);
        if (!isNaN(nomeCliente)) {
            console.log("Erro: Nome inv√°lido.");
        }else{
            console.log("Seu nome √© "+nomeCliente);
        }
    }

    // Endere√ßo do Cliente
    while (!isNaN(enderecoCliente)) {
        enderecoCliente = promptSync(`üìç Digite seu endere√ßo: `);
        if (!isNaN(enderecoCliente)) {
            console.log("Erro: endere√ßo inv√°lido.");
        }else{
            console.log("Endere√ßo definido como: "+enderecoCliente);
        }
    }

    // Distancia

    while (!isNaN(distanciaEntrega) && distanciaEntrega <= 0) {
        distanciaEntrega = parseFloat(promptSync("üöó Digite a dist√¢ncia da entrega (em KM): "));

        if (isNaN(distanciaEntrega) || distanciaEntrega <= 0) {
            console.log("Erro: Dist√¢ncia inv√°lida!");
            distanciaEntrega = 0
        } else {
            console.log("Dist√¢ncia definida como: " + distanciaEntrega);
        }
    }

    // Valor por KM

    while (!isNaN(valorKm) && valorKm <= 0) {
        valorKm = parseFloat(promptSync("üí∏Digite a Valor por KM (em reais): "));

        if (isNaN(valorKm) || valorKm <= 0) {
            console.log("Erro: Valor inv√°lido!");
            valorKm = 0
        } else {
            console.log("Valor definido como: " + valorKm + " reais por KM.");
            totalEntregas = totalEntregas+valorKm
        }
    }

    // // Tipo Entrega

    while (tipoEntrega == 0) {
        tipoEntrega = promptSync("üéÅDigite o tipo de entrega (Normal ou Urgente): ");

        if (tipoEntrega == "Normal") {
            console.log("Voc√™ definiu o tipo da entrega como Normal");
        } else {
            if (tipoEntrega == "Urgente") {
                console.log("Voc√™ definiu o tipo da entrega como Urgente")
            } else {
                tipoEntrega = 0
                console.log("Erro: Tipo de entrega inv√°lida.")
            }
        }
    }

    // Processamento de Dados

    valorTotal = (distanciaEntrega * valorKm);

    if (tipoEntrega == "Urgente") {
        valorTotal = valorTotal * 1.2;
    }


    dados[i] = (`Seu nome √© ${nomeCliente}, seu endere√ßo √© ${enderecoCliente}, a dist√¢ncia de entrega √© ${distanciaEntrega}, o valor por KM √© ${valorKm}, o tipo de entrega √© ${tipoEntrega}, e o valor total √© ${(valorTotal)}`);

    continuar = promptSync("Voc√™ deseja continuar? (S/N): ");
    i++

    // No final, tornamos todas as vari√°veis como 0, para o programa reiniciar e n√£o dar nenhuma interfer√™ncia de informa√ß√µes
nomeCliente = 0;
enderecoCliente = 0;
distanciaEntrega = 0;
valorKm = 0;
valorTotal = 0;
tipoEntrega = 0;

}


totalMediaEntregas = totalEntregas/i // Essa linha tira a m√©dia de todas as entregas

console.log(`Dados salvos no arquivo "Dados Processados.txt"`)

let nomeArquivo = "Dados Processados";
let conteudo = "Aqui est√£o todas as informa√ß√µes que foram armazenadas:"
let j = 1

do { // Essa repeti√ß√£o adiciona todo o vetor dos dados numa √∫nica vari√°vel (conteudo)
    conteudo = `${conteudo}\n${j} - ${dados[j]};`
    j++
} while (j != i);

conteudo = `${conteudo}\n Foram ${i} entregas, e a m√©dia do custo de todas as entregas √© de ${totalMediaEntregas};`

fs.writeFileSync(""+nomeArquivo+".txt", conteudo, "utf8")
